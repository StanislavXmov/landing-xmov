import { useSpring, animated} from '@react-spring/web';
import { useGesture } from '@use-gesture/react';
import styles from './Header.module.scss';
import { useState } from 'react';

const Icon = ({isActive}: {isActive: boolean}) => {
  const { x } = useSpring({ config: { duration: 1000 }, x: isActive ? 1 : 0 });
  return (
    <>
      <svg width="217" height="186" viewBox="0 0 217 186" fill="none" xmlns="http://www.w3.org/2000/svg">
        <path d="M1 108.132C1 151.881 28.0747 185 72.4976 185C101.109 185 133.151 167.124 152.337 142.71C152.337 142.71 155.921 143.239 158.295 143.339C168.507 143.77 175.477 136.676 177.956 126.909C182.723 108.132 169.615 98.157 169.615 98.157C169.615 54.4079 122.283 43 77.8599 43C33.437 43 1 64.3831 1 108.132Z" fill="white" stroke="black"/>
        <path d="M60 133H43L51.5 146L60 133Z" fill="#586362"/>
        <path d="M120 111H79.2978C79.2978 111 88.7557 130.832 99.3539 130.999C110.123 131.169 120 111 120 111Z" fill="black"/>
        <path d="M15 111H43.9045C43.9045 111 36.256 127.412 27.9775 126.483C20.5165 125.646 15 111 15 111Z" fill="black"/>
        <path d="M120 111H79.2978C79.2978 111 88.7557 130.832 99.3539 130.999C110.123 131.169 120 111 120 111Z" stroke="black"/>
        <path d="M15 111H43.9045C43.9045 111 36.256 127.412 27.9775 126.483C20.5165 125.646 15 111 15 111Z" stroke="black"/>
        <path d="M120 111H79.2978C79.2978 111 88.7557 138.765 99.3539 138.999C110.123 139.236 120 111 120 111Z" fill="url(#paint0_radial_0_1)"/>
        <path d="M15 111H43.9045C43.9045 111 36.256 133.976 27.9775 132.676C20.5165 131.505 15 111 15 111Z" fill="url(#paint1_radial_0_1)"/>
        <animated.path 
          d={x.to({
            range: [0, 1],
            output: [
              "M60 162C60 162.552 56.1944 163 51.5 163C46.8056 163 43 162.552 43 162C43 161.448 45.3056 161.5 50 161.5C54.6944 161.5 60 161.448 60 162Z",
              "M74 154.049C74 159.841 58.6897 161 55.5 161C53.5862 161 38.2759 161 37 154.628C37 153.988 40.191 159.262 55.5 159.262C69.5345 159.262 74 153.409 74 154.049Z"
            ]
          })}
          fill="black"
        />
        <path fillRule="evenodd" clipRule="evenodd" d="M5.52061 74.5429C6.25807 75.42 23.5749 80.0938 36.3543 83.9486C51.3028 88.4578 94.7067 93.7177 129.83 92.2667C146.841 91.564 170.858 89.501 170.858 89.501L192.877 97.1066C217.263 102.638 228.564 101.255 195.256 83.9486L171.98 70.1414C171.681 68.1319 171.313 66.1962 170.858 64.4905C165.219 43.3389 160.048 34.4288 145.153 23.2394C131.85 13.2461 117.19 6.80729 102.112 3.00292C82.86 -1.85463 65.7049 2.65941 47.1147 10.7862C39.9412 13.9222 26.5204 22.8819 16.0295 39.5842C4.21892 58.3874 4.3316 73.1286 5.52061 74.5429ZM82.2472 83.9486L38.233 76.3431C38.233 76.3431 33.3161 70.3401 34.0602 66.5286C34.955 61.9457 43.5861 58.3874 43.5861 58.3874L82.2472 64.4905C82.2472 64.4905 92.9231 71.7143 91.1394 75.4857C89.3557 79.2571 82.2472 83.9486 82.2472 83.9486Z" fill="#353535"/>
        <path d="M170.858 89.501C170.858 89.501 146.841 91.564 129.83 92.2667C94.7067 93.7177 51.3028 88.4578 36.3543 83.9486C23.5749 80.0938 6.25807 75.42 5.52061 74.5429C4.3316 73.1286 4.21892 58.3874 16.0295 39.5842C26.5204 22.8819 39.9412 13.9222 47.1147 10.7862C65.7049 2.65941 82.86 -1.85463 102.112 3.00292C117.19 6.80729 131.85 13.2461 145.153 23.2394C160.048 34.4288 165.219 43.3389 170.858 64.4905C171.313 66.1962 171.681 68.1319 171.98 70.1414M170.858 89.501L192.877 97.1066C217.263 102.638 228.564 101.255 195.256 83.9486L171.98 70.1414M170.858 89.501C170.858 89.501 173.201 78.3707 171.98 70.1414M38.233 76.3431L82.2472 83.9486C82.2472 83.9486 89.3557 79.2571 91.1394 75.4857C92.9231 71.7143 82.2472 64.4905 82.2472 64.4905L43.5861 58.3874C43.5861 58.3874 34.955 61.9457 34.0602 66.5286C33.3161 70.3401 38.233 76.3431 38.233 76.3431Z" stroke="black"/>
        <defs>
        <radialGradient id="paint0_radial_0_1" cx="0" cy="0" r="1" gradientUnits="userSpaceOnUse" gradientTransform="translate(66.9101 42.1667) rotate(90) scale(105.864 225.276)">
        <stop/>
        <stop offset="1" stopOpacity="0"/>
        </radialGradient>
        <radialGradient id="paint1_radial_0_1" cx="0" cy="0" r="1" gradientUnits="userSpaceOnUse" gradientTransform="translate(66.9101 42.1667) rotate(90) scale(105.864 225.276)">
        <stop/>
        <stop offset="1" stopOpacity="0"/>
        </radialGradient>
        </defs>
      </svg>
    </>
  );
}

export const Header = () => {
  const [active, setActive] = useState(false);
  const [{ xy }, set] = useSpring(() => ({ xy: [0, 0] }));
  const bind = useGesture({
    onDrag: (props) => {
      const { down, movement: [x, y], event } = props;
      event.preventDefault();
      set.start({xy: down ? [x, y] : [0, 0]});
    },
    onDragStart: () => {
      setActive(true);
    },
    onDragEnd: () => {
      setActive(false);
    }
  });
  return (
    <header className={styles.Header}>
      <div className={styles.bg}>
        <animated.div 
          className={styles.box} 
          {...bind()} 
          style={{
            transform: xy.to((x, y) => `translate3d(${x}px, ${y}px, 0)`),
          }}
        >
          <Icon isActive={active} />
        </animated.div>
      </div>
    </header>
  );
};